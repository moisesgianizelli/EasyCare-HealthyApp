package com.example.easycareproject.ui.theme.viewmodel


import androidx.lifecycle.ViewModel
import androidx.lifecycle.viewModelScope
import com.example.easycareproject.data.database.User
import com.example.easycareproject.data.repository.UserRepository
import kotlinx.coroutines.flow.firstOrNull
import kotlinx.coroutines.launch

class SignupViewModel(private val repository: UserRepository) : ViewModel() {

    // Register a new user
    fun registerUser(
        username: String,
        password: String,
        onSuccess: () -> Unit,
        onError: (String) -> Unit
    ) {
        viewModelScope.launch {
            val existingUser = repository.allUsers.firstOrNull()?.find { it.username == username }
            if (existingUser != null) {
                onError("Username already exists.")
            } else {
                val newUser = User(id = 0, username = username, password = password) // ID will be auto-generated by Room
                repository.insertUser(newUser)
                onSuccess()
            }
        }
    }
}
